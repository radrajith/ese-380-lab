
AVRASM ver. 2.1.52  C:\Users\radra_000\Box Sync\college sophomore fall 2014\fall 2014 notes and files\ese 380 lab\lab 4\extracredit\extracredit\extracredit.asm Wed Oct 01 10:53:08 2014

C:\Users\radra_000\Box Sync\college sophomore fall 2014\fall 2014 notes and files\ese 380 lab\lab 4\extracredit\extracredit\extracredit.asm(25): Including file 'C:\Program Files (x86)\Atmel\Atmel Toolchain\AVR Assembler\Native\2.1.39.1005\avrassembler\Include\m16def.inc'
                 
                 
                  *---------------------------------------------------------------
                  * 7-seg-diag.asm
                  ; Extra credit code:
                  ; When button 1 is pressed then a square wave will keep ouputting
                  ; When button 2 is pressed once then a square wave will output for 
                  ; 10 cycles.
                  *
                  * Inputs used: PD0 to PD7 (DIP-8 switch)
                  *				PC0, PC6, PC7 (PBSW1, PBSW2, PBSW3,active low)
                  * Outputs used: PA1, and PA2
                  *
                  *
                  * assumes: nothing
                  * alters: r16, SREG
                  *  
                  * Author: Rajith Radhakrishnan (109061463) , Raymond Ng(109223276)
                  * Date: 10/01/14
                  * ESE 380 L01, Bench 6
                  * Version 1.0
                  */ 
                 
                  
                  .list
                 
                 
                  reset:
000000 ef0f      	 ldi r16, $ff			;activate only the pin1 of port A
000001 bb0a      	 out DDRA, r16
000002 ef0f      	 ldi r16, $ff
000003 bb05      	 out PORTC, r16
000004 e000      	 ldi r16, $00
000005 bb04      	 out DDRC, r16
000006 ef1f      	 ldi r17, $ff
000007 e020      	 ldi r18, $00
000008 e04a      	 ldi r20, 10
                 
                  main_loop:
000009 9998      	SBIC PINC, 0				;check for button press
00000a c003      	rjmp button2
                 delay1:
00000b 999e      	sbic PINC,6
00000c c001      	rjmp button2
00000d c005      	RJMP sqwave					;go to square wave
                 button2:
00000e 999e      	sbic PINC,6
00000f cff9      	Rjmp main_loop				;repeat until button pressed
                 delay2:
000010 999e      	sbic PINC, 6
000011 cff7      	RJMP main_loop				;if its a noise repeat the program
000012 c007      	rjmp pulse
                 	
                 	
                 sqwave:
000013 bb1b      	out PORTA, r17				;output 1
000014 0000
000015 0000      	NOP NOP						;wait 2 clock cycles
000016 bb2b      	out PORTA, r18				;output 0
000017 9998      	SBIC PINC,0					;check weather the button is still pressed
000018 cff0      	rjmp main_loop				;if its not pressed restart the code
000019 cff9      	rjmp sqwave					;if its still pressd continue to display square wave
                 pulse:
                 
00001a bb1b      	out PORTA, r17				;output 1
00001b 0000
00001c 0000      	NOP NOP						;wait 2 clock cycles
00001d bb2b      	out PORTA, r18				;output 0
00001e 954a      	dec r20
00001f f7d1      	brne pulse
000020 cfe8      	rjmp main_loop				;if its not pressed restart the code


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

"ATmega16" register use summary:
r0 :   0 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   6 r17:   3 r18:   3 r19:   0 r20:   2 r21:   0 r22:   0 r23:   0 
r24:   0 r25:   0 r26:   0 r27:   0 r28:   0 r29:   0 r30:   0 r31:   0 
x  :   0 y  :   0 z  :   0 
Registers used: 4 out of 35 (11.4%)

"ATmega16" instruction use summary:
.lds  :   0 .sts  :   0 adc   :   0 add   :   0 adiw  :   0 and   :   0 
andi  :   0 asr   :   0 bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 
brcc  :   0 brcs  :   0 break :   0 breq  :   0 brge  :   0 brhc  :   0 
brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 brlt  :   0 brmi  :   0 
brne  :   1 brpl  :   0 brsh  :   0 brtc  :   0 brts  :   0 brvc  :   0 
brvs  :   0 bset  :   0 bst   :   0 call  :   0 cbi   :   0 cbr   :   0 
clc   :   0 clh   :   0 cli   :   0 cln   :   0 clr   :   0 cls   :   0 
clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   0 cpc   :   0 
cpi   :   0 cpse  :   0 dec   :   1 eor   :   0 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    :   0 inc   :   0 jmp   :   0 
ld    :   0 ldd   :   0 ldi   :   6 lds   :   0 lpm   :   0 lsl   :   0 
lsr   :   0 mov   :   0 movw  :   0 mul   :   0 muls  :   0 mulsu :   0 
neg   :   0 nop   :   4 or    :   0 ori   :   0 out   :   7 pop   :   0 
push  :   0 rcall :   0 ret   :   0 reti  :   0 rjmp  :   9 rol   :   0 
ror   :   0 sbc   :   0 sbci  :   0 sbi   :   0 sbic  :   5 sbis  :   0 
sbiw  :   0 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 seh   :   0 
sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 sev   :   0 
sez   :   0 sleep :   0 spm   :   0 st    :   0 std   :   0 sts   :   0 
sub   :   0 subi  :   0 swap  :   0 tst   :   0 wdr   :   0 
Instructions used: 7 out of 113 (6.2%)

"ATmega16" memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000042     66      0     66   16384   0.4%
[.dseg] 0x000060 0x000060      0      0      0    1024   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 0 warnings
