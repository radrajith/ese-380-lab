
AVRASM ver. 2.1.52  H:\New folder\lab_02_inout_rr_rn\lab_02_inout_rr_rn\lab_02_inout_rr_rn.asm Wed Sep 17 10:21:54 2014

H:\New folder\lab_02_inout_rr_rn\lab_02_inout_rr_rn\lab_02_inout_rr_rn.asm(23): Including file 'C:\Program Files (x86)\Atmel\Atmel Toolchain\AVR Assembler\Native\2.1.39.1005\avrassembler\Include\m16def.inc'
                 
                 
                 /*Introduction to the ATmega16A MCU and Atmel Studio 6.1 Software
                  *---------------------------------------------------------------
                  * prelab2_inout.asm
                  * This is a simple program to display the positions
                  * of 8 SPST switches on 8 LEDs. If the switch is a 
                  * logic 1, the corresponding LED is on. If the SW
                  * is a logic 0, the led is off. 
                  *
                  * Inputs used: PD0 to PD7 (DIP-8 switch)
                  * Outputs used: PB0 to PB7 (Bargraph, 8 LEDs, active low)
                  *
                  * assumes: nothing
                  * alters: r16, SREG
                  *  
                  * Author: Rajith Radhakrishnan (109061463) , Raymond Ng(109223276)
                  * ESE 380 L01, Bench 6
                  * Version 1.0
                  */ 
                 
                 
                  .list
                 
                  reset:
                 	;configure I/O ports(1 pass only!)
000000 ef0f      	ldi r16, $FF				;load r16 with all 1's
000001 bb07      	out DDRB, r16				;set all bits in PORTB to outputs
000002 e000      	ldi r16, $00				;load r16 with all 0's
000003 bb01      	out DDRD, r16				;set all bits in PORTD to inputs
                 
                 again:
                 	;Infinite loop... Input to switch values, and output to LEDs
000004 b300      	in r16, PIND				;read swtich values
000005 9500      	com r16						;complement swich values to drive LEDs
000006 bb08      	out PORTB, r16				;complemented values of the switches are sent to LEDs


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

"ATmega16" register use summary:
r0 :   0 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   7 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   0 r23:   0 
r24:   0 r25:   0 r26:   0 r27:   0 r28:   0 r29:   0 r30:   0 r31:   0 
x  :   0 y  :   0 z  :   0 
Registers used: 1 out of 35 (2.9%)

"ATmega16" instruction use summary:
.lds  :   0 .sts  :   0 adc   :   0 add   :   0 adiw  :   0 and   :   0 
andi  :   0 asr   :   0 bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 
brcc  :   0 brcs  :   0 break :   0 breq  :   0 brge  :   0 brhc  :   0 
brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 brlt  :   0 brmi  :   0 
brne  :   0 brpl  :   0 brsh  :   0 brtc  :   0 brts  :   0 brvc  :   0 
brvs  :   0 bset  :   0 bst   :   0 call  :   0 cbi   :   0 cbr   :   0 
clc   :   0 clh   :   0 cli   :   0 cln   :   0 clr   :   0 cls   :   0 
clt   :   0 clv   :   0 clz   :   0 com   :   1 cp    :   0 cpc   :   0 
cpi   :   0 cpse  :   0 dec   :   0 eor   :   0 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    :   1 inc   :   0 jmp   :   0 
ld    :   0 ldd   :   0 ldi   :   2 lds   :   0 lpm   :   0 lsl   :   0 
lsr   :   0 mov   :   0 movw  :   0 mul   :   0 muls  :   0 mulsu :   0 
neg   :   0 nop   :   0 or    :   0 ori   :   0 out   :   3 pop   :   0 
push  :   0 rcall :   0 ret   :   0 reti  :   0 rjmp  :   1 rol   :   0 
ror   :   0 sbc   :   0 sbci  :   0 sbi   :   0 sbic  :   0 sbis  :   0 
sbiw  :   0 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 seh   :   0 
sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 sev   :   0 
sez   :   0 sleep :   0 spm   :   0 st    :   0 std   :   0 sts   :   0 
sub   :   0 subi  :   0 swap  :   0 tst   :   0 wdr   :   0 
Instructions used: 5 out of 113 (4.4%)

"ATmega16" memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000010     16      0     16   16384   0.1%
[.dseg] 0x000060 0x000060      0      0      0    1024   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 0 warnings
